import { useRouter } from "next/router";
import imageUrlBuilder from "@sanity/image-url";
import { client } from "@/utils/client";
import Image from "next/image";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import loader from "@/utils/asset/icons8-loading-50.png";
import Head from "next/head";
import Link from "next/link";

const slug = ({ sneaker, recommendProduct }) => {
  function urlFor(source) {
    return imageUrlBuilder(client).image(source);
  }
  console.log(sneaker);
  console.log({ recommendProduct });

  return (
    <>
      <Head>
        <title>Shop It | product</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-[#ddd6d6] min-h-screen">
        <Header />

        <section className="p-2 my-1 bg-white">
          <div className="max-w-[72rem] mx-auto md:flex ">

            <section className="">
              {!sneaker && (
                <div className="grid place-items-center">
                  <Image src={loader} alt="loader" className="animate-spin " />
                  <p>Product is loading now</p>
                </div>
              )}

              {sneaker?.image && (
                <div className="w-full h-48 sm:w-60 sm:h-60 md:w-80 md:h-80 relative rounded-md overflow-hidden border border-neutral-300">
                  <Image
                    src={urlFor(sneaker.image).url()}
                    alt={sneaker.title}
                    fill
                    className="w-full h-full absolute object-cover object-center"
                  />
                </div>
              )}
              <h1>{sneaker?.title}</h1>
              <h1>{sneaker?.description}</h1>
              <h1>{sneaker?.price}</h1>
            </section>

            <section>
              <div>
                <p>Recommended</p>
                <div className="flex gap-2 overflow-scroll overflow-y-hidden scroller py-2 ">
                  {recommendProduct && 
                  recommendProduct.map((product) => (
                    <div>
                      <Link href={`/prod/${product?.slug.current}`}>
                        <div className="w-48 h-48 sm:h-48 sm:w-48 md:w-80 md:h-80 relative rounded-md overflow-hidden border border-neutral-300">
                          <Image
                            src={urlFor(product?.image).url()}
                            alt={product?.imgAlt}
                            fill
                            className="w-full h-full absolute object-cover object-center"
                          />
                        </div>
                      </Link>
                    </div>
                  ))}
                </div>
              </div>

            </section>

          </div>
        </section>

        <Footer />
      </div>
    </>
  );
};

export async function getStaticPaths() {
  const paths = await client.fetch(
    `*[_type == "post" && defined(slug.current)][].slug.current`
  );

  return {
    paths: paths.map((slug) => ({ params: { slug } })),
    fallback: true,
  };
}

export async function getStaticProps(context) {
  const { slug = "" } = context.params;
  const sneaker = await client.fetch(
    `
    *[_type in ["shorts", "sneakers","glasses","watches"] && slug.current == $slug][0]
    `,
    { slug }
  );
  const recommendProduct = await client.fetch(
    `*[_type in ["shorts", "sneakers","glasses","watches"] && position == "second" ] `
  );

  return {
    props: {
      sneaker,
      recommendProduct,
    },
  };
}

export default slug;
